package tag10;


import java.util.*;

public class Tag10 {

    private static final Map<String, String> pairs = Map.of("(", ")", "{", "}", "[", "]", "<", ">");
    private static final Map<String, Integer> points1 = Map.of(")", 3, "]", 57, "}", 1197, ">", 25137);
    private static final Map<String, Integer> points2 = Map.of(")", 1, "]", 2, "}", 3, ">", 4);
    private static final  String[] input = new String[]{"{<<[{(<<<([[<<{}()><<>{}>]{[(){}]{{}()}}]]<[{(()())<[]{}>}(({}[])(()[]))]>)>>{{[<[[(<><>)<{}()>]{(", "(({[(<{[[{{[{[<>[]][{}{}]}([{}()][<>()])][[{()()}(()<>)][([]){<>[]}]]}}{<{{{<>{}}(()<>)}[(", "<{({[(<{[[((({()()}<<>()>)){<{[]()}<[]()>><[()[]]>})<{[<[]{}>]<{{}[]}{()[]}>}<[[[]<>]]<(<>())(<>{})", "<{<[{[(<<(<(<[(){}]{()()}>)[{({}())[<>{}]}]>((<(()<>){<>()}>{{{}<>}([][])})))([({[{}()]<[]()", "<[<{(<{{{{[{[{[]{}}<()[]>](<[]{}><[][]>)}<<<<>{}>{<>()}>{([]<>)(()[])}>]}}(<[{[<[]()>[[]<>]]}]>([{", "{[<({<{{([{{{(()<>)(<>{})}}}{(([()()]{()())){[{}{}]([])})<<<()()><<>()>>((()()){[][]})>}](({{<<", "<{<[[(<(((<{[[()<>]{{}()}][(<>)[<>])}>)))>({{{{((<(){}>(()<>))){(<()<>>(()()))[<()<>><[]<>>]}", "<{<({(<(<{{<[((){})[()<>]]{{<>{}}([][])}>}[<{[[]()]}{<[]{}>(()<>)}>(<[()]<{}()>><{()<>}{[]()}>)]}", "{<<({{{(<{{<<[{}{})[(){}]>{<<><>><[]{}>}>({({}())[<>[]]}{{{}{}}<<><>>})}}({[[(()){(){}}]({[]()}<<>{}", "{{{<(([{<([[[[<><>][[]<>]](({}[])<{}{}>)][[<[][]>{{}<>}]<([]{})([]{})>]]{<[(())({}{})]<((){}){<>[]}", "[(<(<<[{{{<<[({}[])<<>>][{{}<>}<[]{}>]>([({}<>){{}[]}]{(<>{})})>}(<<<{()<>}{(){}}>(([]<>){{}[]})>", "{{<([({([<([[(()[])<[]()>][{{}{}}<<>()>]](({<>}{<>[]})<{[][]}{()[]}>))[[<({}[])<<>[]>>[<<>{}>({}<>)}][(<<><>>", "<<<<{{(<{<(<[<<><>>(<>[])]{{<>}((){})>>(({<>()}(<>{})){{{}{}}[(){}]}))<<[[()()][[]<>]]([<><>])><[<[]<>>[[", "<<[<(([(<([<({<><>}{[]<>}){(<>{})<<><>>}>({<<>[]>{()[]}}{(<>())[()[]]})])(<(<{[]<>}{[]{}}>{[()", "(<[<(({{{<(<<{[][]}([][])>[<{}{}>{{}<>}]><<<{}[]>[(){}]>>){{([()<>][{}<>])[<<>()>[<>[]]]>[{<[]{}>[[]{}]}[(", "<([<(<<{[{{{{{{}[]}{()<>}}([{}()]<{}()>)}{{({}())(<>())}[[<>()]<()()>]}}<{<[<>]>[[[]{}]({}{})]", "{[[[[{(<({[[<{{}()}(<>{})>{<<>{}>}]][<[<[][]><[]{}>](([][]))>({<[]()>[{}[]]}[[<>{}]<[]()>])]}(<<(<<>()>)[{<><", "({(([<<({<<<{([][]){<>()}}<[{}<>]{<>{}}>](<[()<>][[][]]>({()[]}[[][]]))>{[<[[]{}](()())>((<><>)<{}{}>)][", "{[(([{[(<[[(<{{}[]}{()()}]<({}<>)[<><>]>)[[[<>{}](<>())][[{}{}]<{}{}>]]]{<<({}[])[<>[]]>{{", "{{([<[{[<(([{({}{})({}[])}[{<>[]}[()()]]][([<>{}](<>))]))>{{([<<()()>(<><>)>((()[]))]]<<(<[]{}>[<>[]]", "{{{<[[<{[(<{{({}{})<<><>>}(<[]{}>[(){}])}({{[]()}(()<>)]<{[]<>}[<>[]]>)>[{((<>()){()()})((<><>)<<>>)}", "({{<<([<<[<([({}())([]<>)]{<(){}>})([[()()]])>]>><<[<(({<>{}})[(()<>){{}()}])([{()[]}[<><>]](<<>[]>[[]{}]", "([<<(<<({<<{(<()()>)[<<>()>[(){}]]}({(()<>)([][])})>>}({<[{{(){}}<{}{}>}<([]{}){[][]}>]>}))[[([[[([][]){(", "([[<([(<{{(({(<><>)<()>}[{()<>}({}<>)]))<([[()](()[])][{()<>}[<><>]])<<[[]{}]<()[]>><{<>[]}[{}[]]>>>][{{<<()[", "{[([<{((<[{{<{<>{}}><([][])<<>[]>>}<<[{}[]]>([(){}])>>{<([()[]]{{}()})(({}[]))><<{()()}<()[]>>", "<({<(<[{<[[{[{()<>}[()[]]]{[[][]]({}<>)}}<<([]())>>]{(<{<><>}<[]()>><{<>{}}>)[(<{}[]><<>()", "[{({[<{<(<<([{[]<>}([]())]{{(){}}})>{(<{<>{}}(<>{})>{{[]<>}([]())})({<<><>>}({()[]}<{}<>>))}>([", "<<<<<<<{<{{[[<[][]>{<>{}}]<<{}()>[[]{}]>]((([]{}))({<><>}({}<>)))}[<[<[][]>][[<>][{}[]]}>[{(()<>)}[<(){}", "([[{<{(<[{[([[{}{}][()()]](<{}[]>[<>[]])}]}(<<<((){})[<>()]><{{}[]}([][])>>>(<[<{}<>>{{}()}][{()()}(<><>)]>", "{[{[{([[[[<[([(){}]<{}<>>)[({}())(()[])]]>]<([<{{}<>}>[<<>>{()[]}]]{<<<>{})<<>{}>><<<>{}>(<><>)", "{<([<((((<[[{<<>{}>[<>()]}]<<(()<>)<()()>>[([]{})<(){}>]>][({<{}[]>}<[()<>](<>())))<<[[]()]<", "([[(<<{[{<[<<<<>[]><<>[]>>({[]<>}<<>{}>)>([<<><>>(()())]({{}()}))][[<([]<>)({})>{{[]()}[[][]]}]<([", "<[<[[([[([<[([(){}]<<>{}>)<(()())[{}{}]>]{({()()}{[][]})((()[])({}{}))}>[[{[{}{}](<><>)}{{[]{}}{", "[(<({<{(([{[<((){})>{{[][]}{()[]}}]}]{((<([]())<<>{}>>{{<>()}{[]}])){(<<{}<>><<>[]>>){({{}[]}<<>[]>)<[(){}]", "{((((<[[{<{({([]())[{}]}[<{}[]>{()}])}>}]{<[<<(<{}{}>(()[]))>[{{<><>}{[]{}}}<[[][]][()<>]>]>](<<{[[](", "<((({(<[[({({({}{}}{{}[]}})([{[]}({}[])]{[{}()]({}())})}{([{{}{}}(<>[])]<({}[])[<>()]>)[[<", "(([([[([<((<(<()()>({}()))[[<>]<<>[]>])[<([]<>)>(<()()>(<>{}))])<{[{[][]}(()<>)]}[[({}[])<()", "{{(((([<<(<{<[[]<>][<><>]><[{}()]<<>()>>}<{{{}()}([]{})}(<()<>><{}<>>)>>){<({[()[]](<>{})}[[<>()](()[])])<", "<(<<([<[[([(([[]()]<(){}>)[{{}()}[{}[]]])][<<<<>()>(<>)>{{()[]}[{}<>]}>])([[([<>[]]<<>()>){{<>()}<()<>>}][", "<<<([([{((([<{[]{}}<(){}>>[(()<>)[[]{}]]]<{<[]{}><[]{}>)>)<<[[{}{}]{{}()}][{()[]}[()()]]>([{[", "{(<<{<[<{<{{(<<>()>{{}[]})[{[]<>}{()[]}]}}(({({}<>)<()>}<[{}{}]{{}<>]>)({<{}{}>((){})}{{[][]}[[][]]", "{([[<[<[[(<([<()>{[]{}}]<[<>{}](()[])>){({{}}([][]))}>)[({(((){})<{}{}>)})[({({}[])[[]()]}<<{}<>>(<><>)>)", "[[<[[([([[{((<{}{}><<>()>)<<<>{}>((){}>>)<<<(){}><[]{}>>([[]{}])>}({[[<>{}]({}())]<<<><>>>})]]((<{{(", "[<{{[([{[[<((([]){(){}})<{<>[]}{[]{}}>){[[[]{}]{[]{}}]}>]{[([<()[]>[<>{}]](([][]){<>{}}))]}]}{", "({([{((<[([[<[{}()][()[]}>]{<{<>[]}<{}{}>>[<<>>{()<>}]}]<({{{}<>}{{}<>}}{<<>{}><()<>>})<(([]()", "({<(({{{{{<{{{[]()}<[]>}[{<>{}}[[][]]]}[{({}())({}())}{({}{})<[]{}>}]>}{[<(([]())({}<>))>[({{", "<<<{[[[<<{[<<((){})(()())>[[[]<>]<<><>>]>{{[{}{}]{(){}}}<{<><>](()())>}][(<{(){}}>)]}>(<[<[", "{[<[{<({([({(<<><>>){([][]){(){}}}}[{{()()}[<><>]}]]{<{<<>>(<><>)}{{<>[]}(<>)}>[{{[]<>}[<>[]]}((<>[]){[]})]}]", "<{[{{[<{[<<<[({}<>)[{}]][{{}{}}]>(({()[]}<{}<>})<[{}]([][])>)>>[[<<[()<>]({}[])>(<[][]>[{}()])>({{", "(({[<([({{<{{(()<>)[{}[]]}<{(){}}<<>()>>}(<[()()](<><>)>{[()()]([]<>)})>({(([]()){{}})<[[]()](<>{", "{{<<[<((<<({[(()<>)([]<>))({[]{}})}[([()[]]{[]{}})])<((<[]{}>(()())))>>{<<<<{}>(<><>)>>(<{<><>}>)>}>", "{{([{{[{([({[<{}<>>({}[])][({})<()<>>]}[<(<>())(<>{})>({(){}}<[]()>)])<{<<{}{}>>[<()()>(<>{})]}({[()<>", "(<(({{<<(<[{{{(){}}(<>[])}<(<>())>}{<{<><>}({}{})>{<[]{}><()[]>}}][<((()[])<{}<>>)((<><>){()()})>]", "<((({{{([([(<{()[]}[{}()]>)][[[[{}[]][<>{}]][{{}}[()()]]]([[{}<>]]{(<>())(()[])})])[{{(<{}()]<<>()>)[{<><>}[", "(([({[([({([[[[]{}]({})]{{[]{}}{{}()}}][[[<>{}]]<<()[]>[<>{}]>]){<<[[]()]<{}[]>>({(){}}<<>{}>)>", "(<{<[({(<({{{[[]<>][<>()]}}[{[[]()]{[]{}}}]}<(([[]()])<<<>[]>{[][]}>)[<([][]){<>{}}>([{}{}]{{}<>", "<{((([[{{{{[[{[]()}[<><>]]<[<><>][{}{}]>](<{{}}({}{})>{<{}>[()<>]})}{([<[][]>]({<>{}}<[][]>))<{[<>{}]}>}", "{<{<([<<[<<{<<<>{}>[()()]>{<[]()><()[]>}}[{([]<>>{[][]}}[({}[])([][])]]>{<[[<>[]]<{}[]>]<[{}[]][[][]]>>}>{{<", "([<[[[<[[<[{<<<>{}>[<>]>(([][]))}([<{}[]>{<>{}}][<{}[]>])]<{{(()[])[[]()]}}[{{{}[]}[{}<>]}(({}(", "[{<[{[<{<{(({{{}()}<[]{}>}{[[]()]})<{[<>[]][<><>]}<(()<>){[][]}>>)<(({{}()}<{}>){(()){[][]}})<{[()<>", "(<{([[{{(((([(()<>)](({}[])[()[]]))])([(([<>]<<>{}>)<{(){}}{<><>}>)[[{[]{}}<<><>>][({})[<>[]]]]]{{<({}{})<()", "{<{(<<<<{{{{[<()()>{(){}}](({})<()()>)}{<[[]{}]<<><>>>}}[<{[<>]{()<>}}[[[]()]]>]}({([[<>[]]{{}()}]){<<{}<>", "([[{<[[{[<{[<({})<<>[]>>{{[]<>}[[]{}]}]{([<>[]][[]{}])(<{}><()>)}}{<{{{}[]}<{}{}>}{<<><>>[[]()", "((<[<(({<{{{{<()<>>}((()())(<>{}))}}{[{({}[]){<>()}}[<()<>>]}}}[<[({()<>}{<>{}}){{<>()}[<><>]}]<(<(){}>(", "[({[(([({[({(<<>[]>)([{}<>]{()()})}<<(<>{})(()[])><[<>{}](()<>)>>)]<[[{(<>()){<>()}}{(<>()}{{}[]}}]]>}{[(([", "[{{<<(({<<<[[({}()){[]}][{(){}}]]>[[<{()<>}([]())>]]}((<<(<>())<()[]>>[(<>()){[][]}]>{[({})<()()>]}))", "[{((([{<<<[<<[{}]<[]()>><([][])[<>{}]>>{[<{}<>>{[]<>}]([<>[]])}](<(<{}[]>{{}()})>([(<>{})<[]<>>]{{<>[]}{<>", "(<[([<[[{{[(<(()())(<>{})><<{}[]>{<>[]}>)<<([]{}){[]}>{(()[])[<>]}>]({<{<>()}>[<<><>>[()[]]]}[(", "[<(<[([<[([<[[[]][()()]]{[[][]]{[][]}}>(<([]{})>)][<({[][]})<({}[])([]())>><{{[]()}}{<{}[]>)>])[{[<<()(", "{{<{[(({[[(((<<>()><<>})<(()()){[]()}>)(<{[][]}<[][]>>{[[][]]{[]}}))<[<{<>{}}>]>]{{[[{<>{}}[", "<{<[{{[<<[[{<{{}()}><[()()]([]{})>}][<[(()<>){<><>}]{[{}()]}>{[{()[]}[<>{}]]{(()[])[<>[]]}}]]<([{{<>()}{", "{<<[<[(<{([<{[<>{}][{}{}]}({[]()}(()))>(<([]{})><<<>{}><{}<>>>)][{{{[]{}}}[([]<>){[]{}}]}<(<<>", "{[(<{({(<<({(({}()){[]{}})<(()[])>}[((<>{})([]()))<{{}[]}[<>[]]>])<[<[{}()]{[][]}><<[]{}>>]>>{", "({(((<<{([{[[<<>{}>[[]()]][{<>[]}<()[]>]]}{({<[][]}{<>()}})({<{}<>>{{}<>}}<{[]{}}({}())>)}]", "[[{[{<<<[[([<<<><>>[()[]]><{<>[]}>])]{([[<<><>>[<><>]][{<>()}{{}{}}]]([{<>()}<{}[]>]{{[][]}([]<>)})){{(", "{<([[[[[[{([[<[][]><{}()>]<([][])<(){}>>]({[[][]]{()[]}})){({<{}{}><<><>>}){([{}{}]{<><>}){(", "({<[(((((<(<[[[]<>](<><>)]<{<>[]}[(){}]>>>(({[<>[]]<<>()>}{[()()]<{}<>>})[{<{}[]>[{}[]]}[[[](", "({{[(({({[({{<<>{}>((){})}(({}{}))})]<[<[({}{})((){})]<<<>{}>>><{[{}[]](<>{})}<<[]<>>([][]", "({([[<{(([<(((())[<>()])[[[]]<{}()>])<[<()<>>{(){}}][{()<>}[[]<>]]>><[<[<>{}]{<>()}>](<(<>())", "{((<<[({(((<{{{}{}}<<>{}>}<({}())<<>[]>>><([<>])<[[]()]>>)[[<<<>[]>(()<>)][([]())]]{{<[]<>>([]{})}<{{}()}(", "((([{{[(<{{((<{}{}><<><>])[({}<>)[[]<>]]){<{()[]}[[]()]>(([])[{}[]])}}(<[[[]{}][{}[]]][[()[", "[{{<{<(<[<{({<[]<>>}<<[][]>[()[]]>){<(<>()]{<>[]}>[<{}[]>{()()}]}}>{[[{[()()]<<>[]>}<[[]<>](<>", "<((<[<<[(<{[[(<>{})(<>{})]<{{}()}>](([{}{}][(){}]}[[<><>]{{}<>}])}<{[[{}{}][{}()]][(()())<[][]>]}>><<", "[(({[[{[{<{[(<<>[]><{}{}>)(([]{}){(){}})]{[[[][]]<<>()>]({<>()}(<>{}))}}[<{{<>()}([]{})}[{[]()}[()[]]]>[[", "[({[([{[({<<([<>[]])(<{}<>><{}{}>)>>{<[{[][]}<{}[]>){[<><>]<()()>}>[(<<>{}>{[][]})[{()<>}(<", "[<<<{[[({<{[{<()()><{}[]>}]<{(()())<{}{}>}{{<>{}}<<>()>}>}<{[{{}[]}(<>)]((<>())[()<>])}{<[<", "[[(<(({([<<<[<{}<>>(<>{})][{<>[]}([][])]><<<[]<>>(())>[[(){}][()<>]]>><{(<{}<>>[{}{}])<{()", "[<<{[([<([([(({}{})[<>[]])<{[]<>}(()())>]<<<{}[]>{<>{}}>{({}[]){{}<>}}>)(([[[][]]](<{}{}><[]{}>)){[<{}[]>{{}<", "[<{[({[{{<[([<<><>>[[][]]]([{}{}]({}{})))([[{}<>]<[]{}>][[<>()]{[][]}])]<<(<<>{}><<>{}>){[<>{}](<>[", "({[<[[{[(<<[<{[][]}([]<>)>[<<>[]>[()[]]]]<(<{}[]><<>{}>)[<[][]>]>>[[{{<><>}{<>}}<[{}()]{<><>}}]{(<<>{}>", "<<({[<[([{(([{(){}}][(()<>){{}<>>])<(<<>>)<[[]{}]{<>{}}>>)}<[<{<<>()>(<>())}>[{<[][]>(<>{})}[<{}[", "{(<(({(((({({[<><>]<[]()>}{{<>[]}{<>()}}){({{}()}{()()})((<><>><()[]>)}})<[[{({}())({}{})}[{<><>", "({(<({(<{((({([]{}){[]()}}({()<>}{(){}))){({<>[]}<[]{}>)<<[]()><[][]>>}))}>){(({[[[<<>[]>][<()[]>([][])]](", "([<{<{(([(<<([{}]([]{}))<(()())({})>>([<{}()>(<>())])>{[[[()()]]<[<>{}]<{}{}>>][<{(){}]{<>{}}><(<>[", "[<[{(({<({([[{[][]}({}[])]([{}()]<{}[]>)])((<<[]{})({}())>{(<>{}){{}()}})[[<<>>(())]])}[{[[[()()](<>[", "(<(((({(<{[{(<<>()>([]()))[<[]()>[<>]]}]<<[[()<>]([]{})]><(<[]{}>{<>[]}){{[]()}(()[])}>>}>)", "<(<<(<<[(([{<<[]{}>(()())>{[(){}]([][])}}][(<{{}{}}{[][]}>(([][])<<>[]>))]))[[<<([{}[]]<[]{}>)>[([()[]]<{}", "[<<<<(<(((<[(<()[]><[]{}>)](<{[]{}}[[]{}]>[<{}<>><<>{}>])>[[{{<>()}}([()<>][[]{}])]<(<[][]>((){}))<<[]", "[<<[([{([[({{{()()}({}{})}({()[]}{<>{}})}{[{<>[]}[<>()]]((<><>)({}()))}){[{<{}{}>(<>[])}{{{}<>}}][<([]{})", "[((({<<<<[<([{(){}}(()[])}{{[][]}({}{})})([{{}{}}{[]()}](([]<>){<><>}))><<<<{}[]>(<>[])>{(<>{})[<>", "{<[({<[<[([{<{[][]}<{}{}>>([{}>)}([{[][]}({}[])][[{}()]])]{[[[{}<>]<<>{}>]{<<><>><[][]>}][(", "{({<{[<{[<<[(<<>><<><>>)[<()[]>[{}[]]]]<[(<>[])<{}>]{({}[]){()[]}}>>{[<{[]()}({})>((())[()[]])](<({}<>)"};

    public static void solve() {
        //String[] input = new String[]{"[({(<(())[]>[[{[]{<()<>>", "[(()[<>])]({[<{<<[]>>(", "{([(<{}[<>[]}>{[]{[(<()>", "(((({<>}<{<{<>}{[]{[]{}", "[[<[([]))<([[{}[[()]]]", "[{[{({}]{}}([{[{{{}}([]", "{<[[]]>}<{[{[{[]{()[[[]", "[<(<(<(<{}))><([]([]()", "<{([([[(<>()){}]>(<<{{", "<{([{{}}[<[[[<>{}]]]>[]]"};
        List<Stack<String>> goodLines = new ArrayList<>();
        long points = 0L;

        l:
        for (String line : input) {
            Stack<String> stack = new Stack<>();
            for (char c : line.toCharArray()) {
                String x = String.valueOf(c);
                if (pairs.containsKey(x)) {
                    stack.push(x);
                } else {
                    String p = stack.pop();
                    if (!pairs.get(p).equals(x)) {
                        points += Tag10.points1.get(x);
                        continue l;
                    }
                }
            }
            goodLines.add(stack);
        }
        System.out.println(points);

        // part 2
        List<Long> scores = new ArrayList<>();
        for (Stack<String> stack : goodLines){
            long p2 = 0;
            while(!stack.empty()){
                String c1 = pairs.get(stack.pop());
                p2 *= 5;
                p2 += points2.get(c1);
            }
            scores.add(p2);
        }
        Collections.sort(scores);
        System.out.println(scores.get(scores.size()/ 2));
    }

    public static void main(String[] args) {
        solve();
    }

}
